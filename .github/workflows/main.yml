name: Deploy Frontend

on:
  push:
    branches:
      - deploy
      - main

jobs:
  build-and-deploy:
    if: github.ref == 'refs/heads/deploy'
    runs-on: ubuntu-latest
    
    steps:
      - name: üöÄ Checkout Code
        uses: actions/checkout@v2

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: üõ†Ô∏è Build Project Locally
        run: |
          npm install --save-dev @babel/plugin-proposal-private-property-in-object
          npm install --legacy-peer-deps
          CI=false NODE_OPTIONS="--max-old-space-size=8192" npm run build
        env:
          CI: false

      - name: üìÇ Deploy to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "build/"
          target: "~/apps/lms/frontend/"

      - name: üîß Setup VPS Environment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |

            # If using NVM, initialize it
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            
            # Setup application
            cd ~/apps/lms/frontend
            
            if pm2 list | grep -q "lms-frontend"; then
              echo "Reloading existing PM2 process"
              pm2 reload lms-frontend
            else
              echo "Starting new PM2 process"
              pm2 start serve --name "lms-frontend" -- -s build -l 3000
            fi
            
            # Save PM2 process list
            pm2 save
            
            echo "‚úÖ Deployment complete!"
